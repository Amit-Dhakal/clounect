spring.datasource.url=jdbc:postgresql://localhost:5432/clounect
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update

server.port=8080

# web
spring.data.web.pageable.default-page-size=10

# Log4j2 Configuration
logging.level.root=info
logging.file.name=/var/logs/clounect/clounect.log
logging.logback.rollingpolicy.max-file-size=100MB
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

#liquibase
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml

#AWS properties
spring.security.oauth2.client.clientId =
spring.security.oauth2.client.clientSecret =

#AWS Cognito Properties
spring.security.oauth2.client.registration.cognito.clientId =
spring.security.oauth2.client.registration.cognito.clientSecret =
spring.security.oauth2.client.registration.cognito.scope = openid
spring.security.oauth2.client.registration.cognito.redirectUri = https://<domain_name>/login/oauth2/code/cognito
spring.security.oauth2.client.registration.cognito.clientName = clounect
spring.security.oauth2.client.registration.cognito.authorizationGrantType=authorization_code
spring.security.oauth2.client.userPoolId =
spring.security.oauth2.client.userPoolRegion =
spring.security.oauth2.client.provider.cognito.issuerUri = https://cognito-idp.<userPoolRegion>.amazonaws.com/<userPoolId>
aws.cognito.logoutUrl=https://<clounetDomain>.auth.<userPoolRegion>.amazoncognito.com/logout
aws.cognito.logout.success.redirectUrl=https://<domain_name>/

#for google
application.name = "google"
